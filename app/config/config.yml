imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }
    - { resource: "@DownloadBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: false
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.project_dir%/var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # (optional) it will default to the name set for the mapping
                is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Stof Doctrine extension
stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            blameable: true
            loggable: true
            timestampable: true

# FOS Rest
fos_rest:
    routing_loader:
        default_format: json
        include_format: false
    versioning:
        enabled: true
        resolvers:
            media_type: # Accept header
                enabled: true
                regex: '/(v|version)=(?P<version>[0-9\.]+)/'
    view:
        mime_types:
            json: ['application/json', 'application/json;version=1.0']
        view_response_listener: true
        formats: { json: true, xml: false, rss: false }
    serializer:
        serialize_null: true
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    format_listener:
        rules:
            - { path: '^/', priorities: ['json'], fallback_format: 'json' }
    exception:
        enabled: true
    param_fetcher_listener: true

# API doc
nelmio_api_doc: ~

# FOS User Bundle
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: api
    user_class: UserBundle\Entity\User
    from_email:
        address: "contact@karl-pineau.fr"
        sender_name: "Karl Pineau"
    registration:
        form:
            type: UserBundle\Form\RegistrationType
            validation_groups: [UserRegistration]
    profile:
        form:
            type: UserBundle\Form\ProfileType
            validation_groups: [UserProfile]

# Guzzle
csa_guzzle:
    logger: true

# Fos Comment
fos_comment:
    db_driver: orm
    class:
        model:
            comment: AppBundle\Entity\Comment\Comment
            thread: AppBundle\Entity\Comment\Thread

# FOS OAuth Server
fos_oauth_server:
    db_driver: orm       # Drivers available: orm, mongodb, or propel
    client_class:        UserBundle\Entity\Client
    access_token_class:  UserBundle\Entity\AccessToken
    refresh_token_class: UserBundle\Entity\RefreshToken
    auth_code_class:     UserBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username
        options:
            access_token_lifetime: 15768000

# JMS Serialize
jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/serializer/FOSUserBundle"

# KNP Gaufrette
knp_gaufrette:
    adapters:
        default:
            local:
                directory: %kernel.root_dir%/../web/images/uploads
                create:     true
    filesystems:
        default:
            adapter:    default
            alias:      default_filesystem

# SRIO Rest Upload
srio_rest_upload:
    storages:
        default:
            filesystem: gaufrette.default_filesystem